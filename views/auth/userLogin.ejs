<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Registration Form</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;1,300;1,500;1,600&display=swap"
      rel="stylesheet"
    />

    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css"
      integrity="sha512-SzlrxWUlpfuzQ+pcUCosxcglQRNAq/DZjVsC0lE40xsADsfeQoEypE+enwcOiGjk/bSuGGKHEyjSoQ1zVisanQ=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />

    <link rel="stylesheet" href="/public/css/registerstyle.css" />
  </head>
  <body>
    <div class="box">
      <div class="row custom-row justify-content-center">
        <div class="col-sm-12 col-md-8 col-lg-6">
          <div class="container rounded my-2 px-0 insideContainer">
            <div
              id="messageBox"
              class="message-box py-3 mx-5 px-5 justify-content-center"
            ></div>
            <div class="py-1 header">
              <h1 class="text-center">Login Form</h1>
            </div>

            <form action="" method="post" class="form">
              <div class="py-3 mx-5">
                <label for="email" class="form-label">Email:</label>
                <label for="" class="form-label"></label>
                <input
                  type="email"
                  name="email"
                  class="form-control p-2"
                  placeholder="example@gmail.com"
                  required
                />
              </div>

              <div class="py-3 mx-5">
                <label for="password" class="form-label">Password:</label>
                <input
                  type="password"
                  name="password"
                  class="form-control p-2"
                  placeholder="Enter Your Password"
                  required
                />
              </div>

              <div class="py-3 mx-5 text-center text-white">
                <input
                  type="Submit"
                  class="btn text-white"
                  id="loginButton"
                  value="Login"
                />
              </div>
              <div class="d-flex justify-content-center">
                <a href="/auth/forgetPassword">Forgot Password?</a>
              </div>
              <div class="d-flex justify-content-center">
                <a
                  href="/auth/registers"
                  style="color: #212a3e; font-weight: 900"
                >
                  Create New Account</a
                >
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
      let loginResult = {};
      const login = async () => {
        const formE2 = document.querySelector(".form");

        formE2.addEventListener("submit", async (event) => {
          event.preventDefault();

          const messageBox = document.getElementById("messageBox");

          const formData = new FormData(formE2);

          //javascript object
          const data = Object.fromEntries(formData);

          try {
            const result = await axios.post("/api/v1/auth/login", data);

            loginResult = await result.data;
            if (loginResult.success) {
              window.location.href = "http://localhost:3000/qrs";
            } else {
              messageBox.innerHTML = `<div class="alert alert-danger" role="alert"><i class="fas fa-times-circle"></i>${data.message}</div>`;
            }
          } catch (error) {
            const errorMessage =
              error.response && error.response.data.message
                ? error.response.data.message
                : "An internal server error occcured.";
            messageBox.innerHTML = `<div class="alert alert-danger" role="alert"><i class="fa fa-times-circle"></i> ${errorMessage}</div>`;
          }
        });
      };
      login();

      const refreshToken = async () => {
        try {
          const storedRefreshToken = login.loginResult.refreshToken;
          console.log("stored refreshtoken", storedRefreshToken);

          const response = await axios.post("/api/v1/auth/regenerate", {
            refreshToken: storedRefreshToken,
          });

          //updating the stored token with new one
          loginResult.token = response.data.token;

          setCookie("jwt", loginResult.token, {
            expires: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),
            httpOnly: true,
          });
          return loginResult.token;
        } catch (error) {
          //redirecting to login page on failing.
          window.location.href = "http://localhost:3000/auth/login";
          throw error;
        }
      };

      axios.interceptors.response.use(
        (response) => {
          return response;
        },
        async (error) => {
          if (
            error.response.status === 401 &&
            error.response.data.message === "Invalid Token"
          ) {
            try {
              const refreshedToken = await refreshToken();
            } catch (error) {
              window.location.href = "http://localhost:3000/auth/login";
              return Promise.reject(error);
            }
          }
          return Promise.reject(error);
        }
      );
    </script>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
